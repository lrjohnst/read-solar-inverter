name: Deploy Solar Inverter Collector

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        port: ${{ secrets.PROD_PORT || 22 }}
        script: |
          set -e

          # Configuration
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          DEPLOY_DIR="/tmp/solar-deploy-$(date +%s)"
          APP_DIR="/opt/solar-inverter"
          SERVICE_NAME="solar-inverter-collector"

          echo "üöÄ Starting deployment..."

          # Clone the repository
          echo "üì• Cloning repository..."
          git clone --depth 1 --branch main "$REPO_URL" "$DEPLOY_DIR"
          cd "$DEPLOY_DIR"

          # Stop the service during deployment
          echo "‚è∏Ô∏è Stopping service..."
          sudo systemctl stop ${SERVICE_NAME}.timer || true

          # Backup current installation if it exists
          if [ -d "$APP_DIR" ]; then
            echo "üíæ Creating backup..."
            sudo cp -r "$APP_DIR" "${APP_DIR}.backup.$(date +%Y%m%d_%H%M%S)"
          fi

          # Update application files (preserve config and logs)
          echo "üìÇ Updating application files..."
          sudo mkdir -p "$APP_DIR"

          # Copy new files
          sudo cp collect_solar_data.py "$APP_DIR/"
          sudo cp setup_database.py "$APP_DIR/"
          sudo cp requirements.txt "$APP_DIR/"
          sudo cp monitor.sh "$APP_DIR/"
          sudo chmod +x "$APP_DIR"/*.py "$APP_DIR"/*.sh

          # Update Python dependencies
          echo "üêç Updating Python dependencies..."
          sudo -u solar "$APP_DIR/venv/bin/pip" install -r "$APP_DIR/requirements.txt"

          # Set proper ownership
          sudo chown -R solar:solar "$APP_DIR"

          # Start the service
          echo "‚ñ∂Ô∏è Starting service..."
          sudo systemctl daemon-reload
          sudo systemctl start ${SERVICE_NAME}.timer

          # Verify deployment
          echo "‚úÖ Verifying deployment..."
          sleep 5
          sudo systemctl status ${SERVICE_NAME}.timer --no-pager -l

          # Test data collection
          echo "üß™ Testing data collection..."
          if sudo -u solar timeout 30 "$APP_DIR/venv/bin/python" "$APP_DIR/collect_solar_data.py"; then
            echo "‚úÖ Test collection successful"
          else
            echo "‚ùå Test collection failed"
            exit 1
          fi

          # Cleanup
          echo "üßπ Cleaning up..."
          rm -rf "$DEPLOY_DIR"

          echo "üéâ Deployment completed successfully!"
          echo "üìä Service status:"
          sudo systemctl status ${SERVICE_NAME}.timer --no-pager -l